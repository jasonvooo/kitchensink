<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jboss.eap.quickstarts</groupId>
        <artifactId>jboss-eap-quickstart-parent</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>6.0.0.redhat-00001</version>
        <relativePath/>
    </parent>


    <artifactId>kitchensink-eap</artifactId>
    <packaging>war</packaging>
    <name>Kitchensink EAP Module</name>

    <properties>
        <!-- The versions for BOMs, Dependencies and Plugins -->
        <version.server.bom>8.0.5.GA-redhat-00005</version.server.bom>
        <version.eap.maven.plugin>1.0.1.Final-redhat-00015</version.eap.maven.plugin>
    </properties>

    <repositories>
        <!-- JBoss/Red Hat Repositories -->
        <repository>
            <id>jboss-public-maven-repository</id>
            <name>JBoss Public Maven Repository</name>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
        </repository>
        <repository>
            <id>redhat-ga-maven-repository</id>
            <name>Red Hat GA Maven Repository</name>
            <url>https://maven.repository.redhat.com/ga/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <!-- keep this repository the first -->
        <pluginRepository>
            <id>jboss-public-maven-repository</id>
            <name>JBoss Public Maven Repository</name>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>redhat-ga-maven-repository</id>
            <name>Red Hat GA Maven Repository</name>
            <url>https://maven.repository.redhat.com/ga/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <!-- importing the ee-with-tools BOM adds specs and other useful artifacts as managed dependencies -->
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-ee-with-tools</artifactId>
                <version>${version.server.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Shared Model - explicitly include in WAR -->
        <dependency>
            <groupId>com.example</groupId>
            <artifactId>kitchensink-model</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <!-- First declare the APIs we depend on and need for compilation. All
       of them are provided by JBoss EAP -->

        <!-- Import the CDI API, we use provided scope as the API is included in
        JBoss EAP -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Needed for running tests (you may also use TestNG) -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Now we declare any tools needed -->

        <!-- Annotation processor to generate the JPA metamodel classes for
        typesafe criteria queries -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Jakarta Activation needed for JPA model generation -->
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Bean Validation Implementation
        Provides portable constraints such as @Email
        Hibernate Validator is shipped in JBoss EAP -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- hibernate-validator dependencies excluded on server dependency management yet required -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Annotation processor that raising compilation errors whenever constraint
        annotations are incorrectly used. -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JPA API, we use provided scope as the API is included in
        JBoss EAP -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Optional, but highly recommended -->
        <!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA)
        JPA from JUnit/TestNG -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided scope
        as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the EJB API, we use provided scope as the API is included in
        JBoss EAP -->
        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JSF API, we use provided scope as the API is included in
        JBoss EAP -->
        <dependency>
            <groupId>jakarta.faces</groupId>
            <artifactId>jakarta.faces-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JAX-RS API, we use provided scope as the API is included
        in JBoss EAP -->
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.parsson</groupId>
            <artifactId>parsson</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <!--    <build>-->
    <!--        <finalName>${project.artifactId}</finalName>-->
    <!--        <plugins>-->
    <!--            <plugin>-->
    <!--                <groupId>org.wildfly.plugins</groupId>-->
    <!--                <artifactId>wildfly-maven-plugin</artifactId>-->
    <!--                <version>${version.wildfly.maven.plugin}</version>-->
    <!--                <configuration>-->
    <!--                    <hostname>localhost</hostname>-->
    <!--                    <port>9990</port>-->
    <!--                    <username>admin</username>-->
    <!--                    <password>admin</password>-->
    <!--                    &lt;!&ndash; Add JACC security configuration &ndash;&gt;-->
    <!--                    <javaOpts>-->
    <!--                        -Djava.security.policy==${project.basedir}/src/main/resources/security.policy-->
    <!--                        -Djava.security.manager=allow-->
    <!--                    </javaOpts>-->
    <!--                </configuration>-->
    <!--            </plugin>-->
    <!--            &lt;!&ndash; Ensure model jar is included in WAR &ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <artifactId>maven-war-plugin</artifactId>-->
    <!--                <configuration>-->
    <!--                    <attachClasses>true</attachClasses>-->
    <!--                    <packagingExcludes>WEB-INF/lib/jakarta.*.jar</packagingExcludes>-->
    <!--                </configuration>-->
    <!--            </plugin>-->
    <!--        </plugins>-->
    <!--    </build>-->
</project>